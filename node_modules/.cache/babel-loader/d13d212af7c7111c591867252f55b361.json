{"ast":null,"code":"import _slicedToArray from \"/run/media/argo/Data/_dev_from_drive_D/_scratchpad/r3f-volumetric-light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/run/media/argo/Data/_dev_from_drive_D/_scratchpad/r3f-volumetric-light/src/index.js\";\n// model by eon/sketchfab https://sketchfab.com/3d-models/elven-ranger-statue-71aec2d9f7724ae09992435ce8ff7258\nimport './fix';\nimport * as THREE from 'three';\nimport { render } from 'react-dom';\nimport React, { Suspense, useEffect, useRef, useState, useMemo } from 'react';\nimport { Canvas, useThree, useFrame, useLoader, extend } from 'react-three-fiber';\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer';\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass';\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass';\nimport { FXAAShader } from 'three/examples/jsm/shaders/FXAAShader';\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader';\nimport { MTLLoader } from 'three/examples/jsm/loaders/MTLLoader';\nimport { AdditiveBlendingShader, VolumetricLightShader } from './shaders';\nimport './styles.css';\nextend({\n  EffectComposer,\n  RenderPass,\n  ShaderPass\n});\nvar DEFAULT_LAYER = 0;\nvar OCCLUSION_LAYER = 1; // Component auto-generated by GLTFJSX: https://github.com/react-spring/gltfjsx\n\nfunction Elf(_ref) {\n  var _ref$layer = _ref.layer,\n      layer = _ref$layer === void 0 ? DEFAULT_LAYER : _ref$layer;\n  var group = useRef();\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      obj = _useState2[0],\n      set = _useState2[1];\n\n  var url = '/scene.obj';\n  var gltf = useMemo(function () {\n    return new OBJLoader().load(url, set);\n  }, [url]);\n  var material = useMemo(function () {\n    if (layer === DEFAULT_LAYER) return new THREE.MeshStandardMaterial({\n      color: new THREE.Color('#2a2a2a'),\n      roughness: 1,\n      metalness: 0.9\n    });else return new THREE.MeshBasicMaterial({\n      color: new THREE.Color('black')\n    });\n  }, [layer]);\n  useFrame(function () {\n    return group.current.rotation.y += 0.004;\n  });\n  return /*#__PURE__*/React.createElement(\"group\", {\n    ref: group,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"group\", {\n    rotation: [-1.5707963267948963, 0, 0],\n    position: [0, 2, 0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"primitive\", {\n    object: gltf,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  })));\n}\n\nfunction Effects() {\n  var _useThree = useThree(),\n      gl = _useThree.gl,\n      scene = _useThree.scene,\n      camera = _useThree.camera,\n      size = _useThree.size;\n\n  var occlusionRenderTarget = useMemo(function () {\n    return new THREE.WebGLRenderTarget();\n  }, []);\n  var occlusionComposer = useRef();\n  var composer = useRef();\n  useEffect(function () {\n    occlusionComposer.current.setSize(size.width, size.height);\n    composer.current.setSize(size.width, size.height);\n  }, [size]);\n  useFrame(function () {\n    camera.layers.set(OCCLUSION_LAYER);\n    occlusionComposer.current.render();\n    camera.layers.set(DEFAULT_LAYER);\n    composer.current.render();\n  }, 1);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"mesh\", {\n    layers: OCCLUSION_LAYER,\n    position: [0, 4.5, -10],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"sphereBufferGeometry\", {\n    attach: \"geometry\",\n    args: [5, 32, 32],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    attach: \"material\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"effectComposer\", {\n    ref: occlusionComposer,\n    args: [gl, occlusionRenderTarget],\n    renderToScreen: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"renderPass\", {\n    attachArray: \"passes\",\n    args: [scene, camera],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"shaderPass\", {\n    attachArray: \"passes\",\n    args: [VolumetricLightShader],\n    needsSwap: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"effectComposer\", {\n    ref: composer,\n    args: [gl],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"renderPass\", {\n    attachArray: \"passes\",\n    args: [scene, camera],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"shaderPass\", {\n    attachArray: \"passes\",\n    args: [AdditiveBlendingShader],\n    \"uniforms-tAdd-value\": occlusionRenderTarget.texture,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"shaderPass\", {\n    attachArray: \"passes\",\n    args: [FXAAShader],\n    \"uniforms-resolution-value\": [1 / size.width, 1 / size.height],\n    renderToScreen: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  })));\n}\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(Canvas, {\n    shadowMap: true,\n    style: {\n      background: '#171717'\n    },\n    camera: {\n      position: [0, 0, 8],\n      fov: 50\n    },\n    gl: {\n      antialias: false\n    },\n    onCreated: function onCreated(_ref2) {\n      var gl = _ref2.gl;\n      gl.toneMapping = THREE.Uncharted2ToneMapping;\n      gl.outputEncoding = THREE.sRGBEncoding;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ambientLight\", {\n    intensity: 0.5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"pointLight\", {\n    position: [0, 60, -100],\n    intensity: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"pointLight\", {\n    position: [-50, 0, -50],\n    intensity: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"spotLight\", {\n    castShadow: true,\n    intensity: 8,\n    angle: Math.PI / 10,\n    position: [10, 10, 10],\n    \"shadow-mapSize-width\": 2048,\n    \"shadow-mapSize-height\": 2048,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"mesh\", {\n    position: [0, 4.5, -10],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"sphereBufferGeometry\", {\n    attach: \"geometry\",\n    args: [4.9, 32, 32],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    attach: \"material\",\n    transparent: true,\n    opacity: 0.5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Suspense, {\n    fallback: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Elf, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Elf, {\n    layer: OCCLUSION_LAYER,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Effects, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }));\n}\n\nrender( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 8\n  }\n}), document.querySelector('#root'));","map":{"version":3,"sources":["/run/media/argo/Data/_dev_from_drive_D/_scratchpad/r3f-volumetric-light/src/index.js"],"names":["THREE","render","React","Suspense","useEffect","useRef","useState","useMemo","Canvas","useThree","useFrame","useLoader","extend","EffectComposer","RenderPass","ShaderPass","FXAAShader","OBJLoader","MTLLoader","AdditiveBlendingShader","VolumetricLightShader","DEFAULT_LAYER","OCCLUSION_LAYER","Elf","layer","group","obj","set","url","gltf","load","material","MeshStandardMaterial","color","Color","roughness","metalness","MeshBasicMaterial","current","rotation","y","Effects","gl","scene","camera","size","occlusionRenderTarget","WebGLRenderTarget","occlusionComposer","composer","setSize","width","height","layers","texture","App","background","position","fov","antialias","toneMapping","Uncharted2ToneMapping","outputEncoding","sRGBEncoding","Math","PI","document","querySelector"],"mappings":"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","sourcesContent":["// model by eon/sketchfab https://sketchfab.com/3d-models/elven-ranger-statue-71aec2d9f7724ae09992435ce8ff7258\n\nimport './fix'\nimport * as THREE from 'three'\nimport { render } from 'react-dom'\nimport React, { Suspense, useEffect, useRef, useState, useMemo } from 'react'\nimport { Canvas, useThree, useFrame, useLoader, extend } from 'react-three-fiber'\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer'\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass'\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass'\nimport { FXAAShader } from 'three/examples/jsm/shaders/FXAAShader'\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader'\nimport { MTLLoader } from 'three/examples/jsm/loaders/MTLLoader'\nimport { AdditiveBlendingShader, VolumetricLightShader } from './shaders'\nimport './styles.css'\n\nextend({ EffectComposer, RenderPass, ShaderPass })\n\nconst DEFAULT_LAYER = 0\nconst OCCLUSION_LAYER = 1\n\n// Component auto-generated by GLTFJSX: https://github.com/react-spring/gltfjsx\nfunction Elf({ layer = DEFAULT_LAYER }) {\n  const group = useRef()\n  const [obj, set] = useState()\n  const url = '/scene.obj';\n  const gltf = useMemo(() => new OBJLoader().load(url, set), [url])\n\n  const material = useMemo(() => {\n    if (layer === DEFAULT_LAYER) return new THREE.MeshStandardMaterial({ color: new THREE.Color('#2a2a2a'), roughness: 1, metalness: 0.9 })\n    else return new THREE.MeshBasicMaterial({ color: new THREE.Color('black') })\n  }, [layer])\n\n  useFrame(() => (group.current.rotation.y += 0.004))\n\n  return (\n    <group ref={group}>\n      <group rotation={[-1.5707963267948963, 0, 0]} position={[0, 2, 0]}>\n        <primitive object={gltf} />\n      </group>\n    </group>\n  )\n}\n\nfunction Effects() {\n  const { gl, scene, camera, size } = useThree()\n  const occlusionRenderTarget = useMemo(() => new THREE.WebGLRenderTarget(), [])\n  const occlusionComposer = useRef()\n  const composer = useRef()\n\n  useEffect(() => {\n    occlusionComposer.current.setSize(size.width, size.height)\n    composer.current.setSize(size.width, size.height)\n  }, [size])\n\n  useFrame(() => {\n    camera.layers.set(OCCLUSION_LAYER)\n    occlusionComposer.current.render()\n    camera.layers.set(DEFAULT_LAYER)\n    composer.current.render()\n  }, 1)\n\n  return (\n    <>\n      <mesh layers={OCCLUSION_LAYER} position={[0, 4.5, -10]}>\n        <sphereBufferGeometry attach=\"geometry\" args={[5, 32, 32]} />\n        <meshBasicMaterial attach=\"material\" />\n      </mesh>\n      <effectComposer ref={occlusionComposer} args={[gl, occlusionRenderTarget]} renderToScreen={false}>\n        <renderPass attachArray=\"passes\" args={[scene, camera]} />\n        <shaderPass attachArray=\"passes\" args={[VolumetricLightShader]} needsSwap={false} />\n      </effectComposer>\n      <effectComposer ref={composer} args={[gl]}>\n        <renderPass attachArray=\"passes\" args={[scene, camera]} />\n        <shaderPass attachArray=\"passes\" args={[AdditiveBlendingShader]} uniforms-tAdd-value={occlusionRenderTarget.texture} />\n        <shaderPass attachArray=\"passes\" args={[FXAAShader]} uniforms-resolution-value={[1 / size.width, 1 / size.height]} renderToScreen />\n      </effectComposer>\n    </>\n  )\n}\n\nfunction App() {\n  return (\n    <Canvas\n      shadowMap\n      style={{ background: '#171717' }}\n      camera={{ position: [0, 0, 8], fov: 50 }}\n      gl={{ antialias: false }}\n      onCreated={({ gl }) => {\n        gl.toneMapping = THREE.Uncharted2ToneMapping\n        gl.outputEncoding = THREE.sRGBEncoding\n      }}>\n      <ambientLight intensity={0.5} />\n      <pointLight position={[0, 60, -100]} intensity={20} />\n      <pointLight position={[-50, 0, -50]} intensity={2} />\n      <spotLight castShadow intensity={8} angle={Math.PI / 10} position={[10, 10, 10]} shadow-mapSize-width={2048} shadow-mapSize-height={2048} />\n      <mesh position={[0, 4.5, -10]}>\n        <sphereBufferGeometry attach=\"geometry\" args={[4.9, 32, 32]} />\n        <meshBasicMaterial attach=\"material\" transparent opacity={0.5} />\n      </mesh>\n      <Suspense fallback={null}>\n        <Elf />\n        <Elf layer={OCCLUSION_LAYER} />\n      </Suspense>\n      <Effects />\n    </Canvas>\n  )\n}\n\nrender(<App />, document.querySelector('#root'))\n"]},"metadata":{},"sourceType":"module"}