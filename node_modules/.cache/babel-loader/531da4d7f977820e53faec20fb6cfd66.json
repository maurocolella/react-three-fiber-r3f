{"ast":null,"code":"/**\n * @author mrdoob / http://mrdoob.com/\n */\nimport { BufferGeometry, FileLoader, Float32BufferAttribute, Group, LineBasicMaterial, LineSegments, Loader, Material, Mesh, MeshPhongMaterial, NoColors, Points, PointsMaterial, VertexColors } from \"../../../build/three.module.js\";\n\nvar OBJLoader = function () {\n  // o object_name | g group_name\n  var object_pattern = /^[og]\\s*(.+)?/; // mtllib file_reference\n\n  var material_library_pattern = /^mtllib /; // usemtl material_name\n\n  var material_use_pattern = /^usemtl /; // usemap map_name\n\n  var map_use_pattern = /^usemap /;\n\n  function ParserState() {\n    var state = {\n      objects: [],\n      object: {},\n      vertices: [],\n      normals: [],\n      colors: [],\n      uvs: [],\n      materialLibraries: [],\n      startObject: function startObject(name, fromDeclaration) {\n        // If the current object (initial from reset) is not from a g/o declaration in the parsed\n        // file. We need to use it for the first parsed g/o to keep things in sync.\n        if (this.object && this.object.fromDeclaration === false) {\n          this.object.name = name;\n          this.object.fromDeclaration = fromDeclaration !== false;\n          return;\n        }\n\n        var previousMaterial = this.object && typeof this.object.currentMaterial === 'function' ? this.object.currentMaterial() : undefined;\n\n        if (this.object && typeof this.object._finalize === 'function') {\n          this.object._finalize(true);\n        }\n\n        this.object = {\n          name: name || '',\n          fromDeclaration: fromDeclaration !== false,\n          geometry: {\n            vertices: [],\n            normals: [],\n            colors: [],\n            uvs: []\n          },\n          materials: [],\n          smooth: true,\n          startMaterial: function startMaterial(name, libraries) {\n            var previous = this._finalize(false); // New usemtl declaration overwrites an inherited material, except if faces were declared\n            // after the material, then it must be preserved for proper MultiMaterial continuation.\n\n\n            if (previous && (previous.inherited || previous.groupCount <= 0)) {\n              this.materials.splice(previous.index, 1);\n            }\n\n            var material = {\n              index: this.materials.length,\n              name: name || '',\n              mtllib: Array.isArray(libraries) && libraries.length > 0 ? libraries[libraries.length - 1] : '',\n              smooth: previous !== undefined ? previous.smooth : this.smooth,\n              groupStart: previous !== undefined ? previous.groupEnd : 0,\n              groupEnd: -1,\n              groupCount: -1,\n              inherited: false,\n              clone: function clone(index) {\n                var cloned = {\n                  index: typeof index === 'number' ? index : this.index,\n                  name: this.name,\n                  mtllib: this.mtllib,\n                  smooth: this.smooth,\n                  groupStart: 0,\n                  groupEnd: -1,\n                  groupCount: -1,\n                  inherited: false\n                };\n                cloned.clone = this.clone.bind(cloned);\n                return cloned;\n              }\n            };\n            this.materials.push(material);\n            return material;\n          },\n          currentMaterial: function currentMaterial() {\n            if (this.materials.length > 0) {\n              return this.materials[this.materials.length - 1];\n            }\n\n            return undefined;\n          },\n          _finalize: function _finalize(end) {\n            var lastMultiMaterial = this.currentMaterial();\n\n            if (lastMultiMaterial && lastMultiMaterial.groupEnd === -1) {\n              lastMultiMaterial.groupEnd = this.geometry.vertices.length / 3;\n              lastMultiMaterial.groupCount = lastMultiMaterial.groupEnd - lastMultiMaterial.groupStart;\n              lastMultiMaterial.inherited = false;\n            } // Ignore objects tail materials if no face declarations followed them before a new o/g started.\n\n\n            if (end && this.materials.length > 1) {\n              for (var mi = this.materials.length - 1; mi >= 0; mi--) {\n                if (this.materials[mi].groupCount <= 0) {\n                  this.materials.splice(mi, 1);\n                }\n              }\n            } // Guarantee at least one empty material, this makes the creation later more straight forward.\n\n\n            if (end && this.materials.length === 0) {\n              this.materials.push({\n                name: '',\n                smooth: this.smooth\n              });\n            }\n\n            return lastMultiMaterial;\n          }\n        }; // Inherit previous objects material.\n        // Spec tells us that a declared material must be set to all objects until a new material is declared.\n        // If a usemtl declaration is encountered while this new object is being parsed, it will\n        // overwrite the inherited material. Exception being that there was already face declarations\n        // to the inherited material, then it will be preserved for proper MultiMaterial continuation.\n\n        if (previousMaterial && previousMaterial.name && typeof previousMaterial.clone === 'function') {\n          var declared = previousMaterial.clone(0);\n          declared.inherited = true;\n          this.object.materials.push(declared);\n        }\n\n        this.objects.push(this.object);\n      },\n      finalize: function finalize() {\n        if (this.object && typeof this.object._finalize === 'function') {\n          this.object._finalize(true);\n        }\n      },\n      parseVertexIndex: function parseVertexIndex(value, len) {\n        var index = parseInt(value, 10);\n        return (index >= 0 ? index - 1 : index + len / 3) * 3;\n      },\n      parseNormalIndex: function parseNormalIndex(value, len) {\n        var index = parseInt(value, 10);\n        return (index >= 0 ? index - 1 : index + len / 3) * 3;\n      },\n      parseUVIndex: function parseUVIndex(value, len) {\n        var index = parseInt(value, 10);\n        return (index >= 0 ? index - 1 : index + len / 2) * 2;\n      },\n      addVertex: function addVertex(a, b, c) {\n        var src = this.vertices;\n        var dst = this.object.geometry.vertices;\n        dst.push(src[a + 0], src[a + 1], src[a + 2]);\n        dst.push(src[b + 0], src[b + 1], src[b + 2]);\n        dst.push(src[c + 0], src[c + 1], src[c + 2]);\n      },\n      addVertexPoint: function addVertexPoint(a) {\n        var src = this.vertices;\n        var dst = this.object.geometry.vertices;\n        dst.push(src[a + 0], src[a + 1], src[a + 2]);\n      },\n      addVertexLine: function addVertexLine(a) {\n        var src = this.vertices;\n        var dst = this.object.geometry.vertices;\n        dst.push(src[a + 0], src[a + 1], src[a + 2]);\n      },\n      addNormal: function addNormal(a, b, c) {\n        var src = this.normals;\n        var dst = this.object.geometry.normals;\n        dst.push(src[a + 0], src[a + 1], src[a + 2]);\n        dst.push(src[b + 0], src[b + 1], src[b + 2]);\n        dst.push(src[c + 0], src[c + 1], src[c + 2]);\n      },\n      addColor: function addColor(a, b, c) {\n        var src = this.colors;\n        var dst = this.object.geometry.colors;\n        dst.push(src[a + 0], src[a + 1], src[a + 2]);\n        dst.push(src[b + 0], src[b + 1], src[b + 2]);\n        dst.push(src[c + 0], src[c + 1], src[c + 2]);\n      },\n      addUV: function addUV(a, b, c) {\n        var src = this.uvs;\n        var dst = this.object.geometry.uvs;\n        dst.push(src[a + 0], src[a + 1]);\n        dst.push(src[b + 0], src[b + 1]);\n        dst.push(src[c + 0], src[c + 1]);\n      },\n      addUVLine: function addUVLine(a) {\n        var src = this.uvs;\n        var dst = this.object.geometry.uvs;\n        dst.push(src[a + 0], src[a + 1]);\n      },\n      addFace: function addFace(a, b, c, ua, ub, uc, na, nb, nc) {\n        var vLen = this.vertices.length;\n        var ia = this.parseVertexIndex(a, vLen);\n        var ib = this.parseVertexIndex(b, vLen);\n        var ic = this.parseVertexIndex(c, vLen);\n        this.addVertex(ia, ib, ic);\n\n        if (this.colors.length > 0) {\n          this.addColor(ia, ib, ic);\n        }\n\n        if (ua !== undefined && ua !== '') {\n          var uvLen = this.uvs.length;\n          ia = this.parseUVIndex(ua, uvLen);\n          ib = this.parseUVIndex(ub, uvLen);\n          ic = this.parseUVIndex(uc, uvLen);\n          this.addUV(ia, ib, ic);\n        }\n\n        if (na !== undefined && na !== '') {\n          // Normals are many times the same. If so, skip function call and parseInt.\n          var nLen = this.normals.length;\n          ia = this.parseNormalIndex(na, nLen);\n          ib = na === nb ? ia : this.parseNormalIndex(nb, nLen);\n          ic = na === nc ? ia : this.parseNormalIndex(nc, nLen);\n          this.addNormal(ia, ib, ic);\n        }\n      },\n      addPointGeometry: function addPointGeometry(vertices) {\n        this.object.geometry.type = 'Points';\n        var vLen = this.vertices.length;\n\n        for (var vi = 0, l = vertices.length; vi < l; vi++) {\n          this.addVertexPoint(this.parseVertexIndex(vertices[vi], vLen));\n        }\n      },\n      addLineGeometry: function addLineGeometry(vertices, uvs) {\n        this.object.geometry.type = 'Line';\n        var vLen = this.vertices.length;\n        var uvLen = this.uvs.length;\n\n        for (var vi = 0, l = vertices.length; vi < l; vi++) {\n          this.addVertexLine(this.parseVertexIndex(vertices[vi], vLen));\n        }\n\n        for (var uvi = 0, l = uvs.length; uvi < l; uvi++) {\n          this.addUVLine(this.parseUVIndex(uvs[uvi], uvLen));\n        }\n      }\n    };\n    state.startObject('', false);\n    return state;\n  } //\n\n\n  function OBJLoader(manager) {\n    Loader.call(this, manager);\n    this.materials = null;\n  }\n\n  OBJLoader.prototype = Object.assign(Object.create(Loader.prototype), {\n    constructor: OBJLoader,\n    load: function load(url, onLoad, onProgress, onError) {\n      var scope = this;\n      var loader = new FileLoader(scope.manager);\n      loader.setPath(this.path);\n      loader.load(url, function (text) {\n        onLoad(scope.parse(text));\n      }, onProgress, onError);\n    },\n    setMaterials: function setMaterials(materials) {\n      this.materials = materials;\n      return this;\n    },\n    parse: function parse(text) {\n      console.time('OBJLoader');\n      var state = new ParserState();\n\n      if (text.indexOf('\\r\\n') !== -1) {\n        // This is faster than String.split with regex that splits on both\n        text = text.replace(/\\r\\n/g, '\\n');\n      }\n\n      if (text.indexOf('\\\\\\n') !== -1) {\n        // join lines separated by a line continuation character (\\)\n        text = text.replace(/\\\\\\n/g, '');\n      }\n\n      var lines = text.split('\\n');\n      var line = '',\n          lineFirstChar = '';\n      var lineLength = 0;\n      var result = []; // Faster to just trim left side of the line. Use if available.\n\n      var trimLeft = typeof ''.trimLeft === 'function';\n\n      for (var i = 0, l = lines.length; i < l; i++) {\n        line = lines[i];\n        line = trimLeft ? line.trimLeft() : line.trim();\n        lineLength = line.length;\n        if (lineLength === 0) continue;\n        lineFirstChar = line.charAt(0); // @todo invoke passed in handler if any\n\n        if (lineFirstChar === '#') continue;\n\n        if (lineFirstChar === 'v') {\n          var data = line.split(/\\s+/);\n\n          switch (data[0]) {\n            case 'v':\n              state.vertices.push(parseFloat(data[1]), parseFloat(data[2]), parseFloat(data[3]));\n\n              if (data.length >= 7) {\n                state.colors.push(parseFloat(data[4]), parseFloat(data[5]), parseFloat(data[6]));\n              }\n\n              break;\n\n            case 'vn':\n              state.normals.push(parseFloat(data[1]), parseFloat(data[2]), parseFloat(data[3]));\n              break;\n\n            case 'vt':\n              state.uvs.push(parseFloat(data[1]), parseFloat(data[2]));\n              break;\n          }\n        } else if (lineFirstChar === 'f') {\n          var lineData = line.substr(1).trim();\n          var vertexData = lineData.split(/\\s+/);\n          var faceVertices = []; // Parse the face vertex data into an easy to work with format\n\n          for (var j = 0, jl = vertexData.length; j < jl; j++) {\n            var vertex = vertexData[j];\n\n            if (vertex.length > 0) {\n              var vertexParts = vertex.split('/');\n              faceVertices.push(vertexParts);\n            }\n          } // Draw an edge between the first vertex and all subsequent vertices to form an n-gon\n\n\n          var v1 = faceVertices[0];\n\n          for (var j = 1, jl = faceVertices.length - 1; j < jl; j++) {\n            var v2 = faceVertices[j];\n            var v3 = faceVertices[j + 1];\n            state.addFace(v1[0], v2[0], v3[0], v1[1], v2[1], v3[1], v1[2], v2[2], v3[2]);\n          }\n        } else if (lineFirstChar === 'l') {\n          var lineParts = line.substring(1).trim().split(\" \");\n          var lineVertices = [],\n              lineUVs = [];\n\n          if (line.indexOf(\"/\") === -1) {\n            lineVertices = lineParts;\n          } else {\n            for (var li = 0, llen = lineParts.length; li < llen; li++) {\n              var parts = lineParts[li].split(\"/\");\n              if (parts[0] !== \"\") lineVertices.push(parts[0]);\n              if (parts[1] !== \"\") lineUVs.push(parts[1]);\n            }\n          }\n\n          state.addLineGeometry(lineVertices, lineUVs);\n        } else if (lineFirstChar === 'p') {\n          var lineData = line.substr(1).trim();\n          var pointData = lineData.split(\" \");\n          state.addPointGeometry(pointData);\n        } else if ((result = object_pattern.exec(line)) !== null) {\n          // o object_name\n          // or\n          // g group_name\n          // WORKAROUND: https://bugs.chromium.org/p/v8/issues/detail?id=2869\n          // var name = result[ 0 ].substr( 1 ).trim();\n          var name = (\" \" + result[0].substr(1).trim()).substr(1);\n          state.startObject(name);\n        } else if (material_use_pattern.test(line)) {\n          // material\n          state.object.startMaterial(line.substring(7).trim(), state.materialLibraries);\n        } else if (material_library_pattern.test(line)) {\n          // mtl file\n          state.materialLibraries.push(line.substring(7).trim());\n        } else if (map_use_pattern.test(line)) {\n          // the line is parsed but ignored since the loader assumes textures are defined MTL files\n          // (according to https://www.okino.com/conv/imp_wave.htm, 'usemap' is the old-style Wavefront texture reference method)\n          console.warn('THREE.OBJLoader: Rendering identifier \"usemap\" not supported. Textures must be defined in MTL files.');\n        } else if (lineFirstChar === 's') {\n          result = line.split(' '); // smooth shading\n          // @todo Handle files that have varying smooth values for a set of faces inside one geometry,\n          // but does not define a usemtl for each face set.\n          // This should be detected and a dummy material created (later MultiMaterial and geometry groups).\n          // This requires some care to not create extra material on each smooth value for \"normal\" obj files.\n          // where explicit usemtl defines geometry groups.\n          // Example asset: examples/models/obj/cerberus/Cerberus.obj\n\n          /*\n           * http://paulbourke.net/dataformats/obj/\n           * or\n           * http://www.cs.utah.edu/~boulos/cs3505/obj_spec.pdf\n           *\n           * From chapter \"Grouping\" Syntax explanation \"s group_number\":\n           * \"group_number is the smoothing group number. To turn off smoothing groups, use a value of 0 or off.\n           * Polygonal elements use group numbers to put elements in different smoothing groups. For free-form\n           * surfaces, smoothing groups are either turned on or off; there is no difference between values greater\n           * than 0.\"\n           */\n\n          if (result.length > 1) {\n            var value = result[1].trim().toLowerCase();\n            state.object.smooth = value !== '0' && value !== 'off';\n          } else {\n            // ZBrush can produce \"s\" lines #11707\n            state.object.smooth = true;\n          }\n\n          var material = state.object.currentMaterial();\n          if (material) material.smooth = state.object.smooth;\n        } else {\n          // Handle null terminated files without exception\n          if (line === '\\0') continue;\n          console.warn('THREE.OBJLoader: Unexpected line: \"' + line + '\"');\n        }\n      }\n\n      state.finalize();\n      var container = new Group();\n      container.materialLibraries = [].concat(state.materialLibraries);\n\n      for (var i = 0, l = state.objects.length; i < l; i++) {\n        var object = state.objects[i];\n        var geometry = object.geometry;\n        var materials = object.materials;\n        var isLine = geometry.type === 'Line';\n        var isPoints = geometry.type === 'Points';\n        var hasVertexColors = false; // Skip o/g line declarations that did not follow with any faces\n\n        if (geometry.vertices.length === 0) continue;\n        var buffergeometry = new BufferGeometry();\n        buffergeometry.setAttribute('position', new Float32BufferAttribute(geometry.vertices, 3));\n\n        if (geometry.normals.length > 0) {\n          buffergeometry.setAttribute('normal', new Float32BufferAttribute(geometry.normals, 3));\n        } else {\n          buffergeometry.computeVertexNormals();\n        }\n\n        if (geometry.colors.length > 0) {\n          hasVertexColors = true;\n          buffergeometry.setAttribute('color', new Float32BufferAttribute(geometry.colors, 3));\n        }\n\n        if (geometry.uvs.length > 0) {\n          buffergeometry.setAttribute('uv', new Float32BufferAttribute(geometry.uvs, 2));\n        } // Create materials\n\n\n        var createdMaterials = [];\n\n        for (var mi = 0, miLen = materials.length; mi < miLen; mi++) {\n          var sourceMaterial = materials[mi];\n          var material = undefined;\n\n          if (this.materials !== null) {\n            material = this.materials.create(sourceMaterial.name); // mtl etc. loaders probably can't create line materials correctly, copy properties to a line material.\n\n            if (isLine && material && !(material instanceof LineBasicMaterial)) {\n              var materialLine = new LineBasicMaterial();\n              Material.prototype.copy.call(materialLine, material);\n              materialLine.color.copy(material.color);\n              material = materialLine;\n            } else if (isPoints && material && !(material instanceof PointsMaterial)) {\n              var materialPoints = new PointsMaterial({\n                size: 10,\n                sizeAttenuation: false\n              });\n              Material.prototype.copy.call(materialPoints, material);\n              materialPoints.color.copy(material.color);\n              materialPoints.map = material.map;\n              material = materialPoints;\n            }\n          }\n\n          if (!material) {\n            if (isLine) {\n              material = new LineBasicMaterial();\n            } else if (isPoints) {\n              material = new PointsMaterial({\n                size: 1,\n                sizeAttenuation: false\n              });\n            } else {\n              material = new MeshPhongMaterial();\n            }\n\n            material.name = sourceMaterial.name;\n          }\n\n          material.flatShading = sourceMaterial.smooth ? false : true;\n          material.vertexColors = hasVertexColors ? VertexColors : NoColors;\n          createdMaterials.push(material);\n        } // Create mesh\n\n\n        var mesh;\n\n        if (createdMaterials.length > 1) {\n          for (var mi = 0, miLen = materials.length; mi < miLen; mi++) {\n            var sourceMaterial = materials[mi];\n            buffergeometry.addGroup(sourceMaterial.groupStart, sourceMaterial.groupCount, mi);\n          }\n\n          if (isLine) {\n            mesh = new LineSegments(buffergeometry, createdMaterials);\n          } else if (isPoints) {\n            mesh = new Points(buffergeometry, createdMaterials);\n          } else {\n            mesh = new Mesh(buffergeometry, createdMaterials);\n          }\n        } else {\n          if (isLine) {\n            mesh = new LineSegments(buffergeometry, createdMaterials[0]);\n          } else if (isPoints) {\n            mesh = new Points(buffergeometry, createdMaterials[0]);\n          } else {\n            mesh = new Mesh(buffergeometry, createdMaterials[0]);\n          }\n        }\n\n        mesh.name = object.name;\n        container.add(mesh);\n      }\n\n      console.timeEnd('OBJLoader');\n      return container;\n    }\n  });\n  return OBJLoader;\n}();\n\nexport { OBJLoader };","map":{"version":3,"sources":["/run/media/argo/Data/_dev_from_drive_D/_scratchpad/r3f-volumetric-light/node_modules/three/examples/jsm/loaders/OBJLoader.js"],"names":["BufferGeometry","FileLoader","Float32BufferAttribute","Group","LineBasicMaterial","LineSegments","Loader","Material","Mesh","MeshPhongMaterial","NoColors","Points","PointsMaterial","VertexColors","OBJLoader","object_pattern","material_library_pattern","material_use_pattern","map_use_pattern","ParserState","state","objects","object","vertices","normals","colors","uvs","materialLibraries","startObject","name","fromDeclaration","previousMaterial","currentMaterial","undefined","_finalize","geometry","materials","smooth","startMaterial","libraries","previous","inherited","groupCount","splice","index","material","length","mtllib","Array","isArray","groupStart","groupEnd","clone","cloned","bind","push","end","lastMultiMaterial","mi","declared","finalize","parseVertexIndex","value","len","parseInt","parseNormalIndex","parseUVIndex","addVertex","a","b","c","src","dst","addVertexPoint","addVertexLine","addNormal","addColor","addUV","addUVLine","addFace","ua","ub","uc","na","nb","nc","vLen","ia","ib","ic","uvLen","nLen","addPointGeometry","type","vi","l","addLineGeometry","uvi","manager","call","prototype","Object","assign","create","constructor","load","url","onLoad","onProgress","onError","scope","loader","setPath","path","text","parse","setMaterials","console","time","indexOf","replace","lines","split","line","lineFirstChar","lineLength","result","trimLeft","i","trim","charAt","data","parseFloat","lineData","substr","vertexData","faceVertices","j","jl","vertex","vertexParts","v1","v2","v3","lineParts","substring","lineVertices","lineUVs","li","llen","parts","pointData","exec","test","warn","toLowerCase","container","concat","isLine","isPoints","hasVertexColors","buffergeometry","setAttribute","computeVertexNormals","createdMaterials","miLen","sourceMaterial","materialLine","copy","color","materialPoints","size","sizeAttenuation","map","flatShading","vertexColors","mesh","addGroup","add","timeEnd"],"mappings":"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","sourcesContent":["/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nimport {\n\tBufferGeometry,\n\tFileLoader,\n\tFloat32BufferAttribute,\n\tGroup,\n\tLineBasicMaterial,\n\tLineSegments,\n\tLoader,\n\tMaterial,\n\tMesh,\n\tMeshPhongMaterial,\n\tNoColors,\n\tPoints,\n\tPointsMaterial,\n\tVertexColors\n} from \"../../../build/three.module.js\";\n\nvar OBJLoader = ( function () {\n\n\t// o object_name | g group_name\n\tvar object_pattern = /^[og]\\s*(.+)?/;\n\t// mtllib file_reference\n\tvar material_library_pattern = /^mtllib /;\n\t// usemtl material_name\n\tvar material_use_pattern = /^usemtl /;\n\t// usemap map_name\n\tvar map_use_pattern = /^usemap /;\n\n\tfunction ParserState() {\n\n\t\tvar state = {\n\t\t\tobjects: [],\n\t\t\tobject: {},\n\n\t\t\tvertices: [],\n\t\t\tnormals: [],\n\t\t\tcolors: [],\n\t\t\tuvs: [],\n\n\t\t\tmaterialLibraries: [],\n\n\t\t\tstartObject: function ( name, fromDeclaration ) {\n\n\t\t\t\t// If the current object (initial from reset) is not from a g/o declaration in the parsed\n\t\t\t\t// file. We need to use it for the first parsed g/o to keep things in sync.\n\t\t\t\tif ( this.object && this.object.fromDeclaration === false ) {\n\n\t\t\t\t\tthis.object.name = name;\n\t\t\t\t\tthis.object.fromDeclaration = ( fromDeclaration !== false );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tvar previousMaterial = ( this.object && typeof this.object.currentMaterial === 'function' ? this.object.currentMaterial() : undefined );\n\n\t\t\t\tif ( this.object && typeof this.object._finalize === 'function' ) {\n\n\t\t\t\t\tthis.object._finalize( true );\n\n\t\t\t\t}\n\n\t\t\t\tthis.object = {\n\t\t\t\t\tname: name || '',\n\t\t\t\t\tfromDeclaration: ( fromDeclaration !== false ),\n\n\t\t\t\t\tgeometry: {\n\t\t\t\t\t\tvertices: [],\n\t\t\t\t\t\tnormals: [],\n\t\t\t\t\t\tcolors: [],\n\t\t\t\t\t\tuvs: []\n\t\t\t\t\t},\n\t\t\t\t\tmaterials: [],\n\t\t\t\t\tsmooth: true,\n\n\t\t\t\t\tstartMaterial: function ( name, libraries ) {\n\n\t\t\t\t\t\tvar previous = this._finalize( false );\n\n\t\t\t\t\t\t// New usemtl declaration overwrites an inherited material, except if faces were declared\n\t\t\t\t\t\t// after the material, then it must be preserved for proper MultiMaterial continuation.\n\t\t\t\t\t\tif ( previous && ( previous.inherited || previous.groupCount <= 0 ) ) {\n\n\t\t\t\t\t\t\tthis.materials.splice( previous.index, 1 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar material = {\n\t\t\t\t\t\t\tindex: this.materials.length,\n\t\t\t\t\t\t\tname: name || '',\n\t\t\t\t\t\t\tmtllib: ( Array.isArray( libraries ) && libraries.length > 0 ? libraries[ libraries.length - 1 ] : '' ),\n\t\t\t\t\t\t\tsmooth: ( previous !== undefined ? previous.smooth : this.smooth ),\n\t\t\t\t\t\t\tgroupStart: ( previous !== undefined ? previous.groupEnd : 0 ),\n\t\t\t\t\t\t\tgroupEnd: - 1,\n\t\t\t\t\t\t\tgroupCount: - 1,\n\t\t\t\t\t\t\tinherited: false,\n\n\t\t\t\t\t\t\tclone: function ( index ) {\n\n\t\t\t\t\t\t\t\tvar cloned = {\n\t\t\t\t\t\t\t\t\tindex: ( typeof index === 'number' ? index : this.index ),\n\t\t\t\t\t\t\t\t\tname: this.name,\n\t\t\t\t\t\t\t\t\tmtllib: this.mtllib,\n\t\t\t\t\t\t\t\t\tsmooth: this.smooth,\n\t\t\t\t\t\t\t\t\tgroupStart: 0,\n\t\t\t\t\t\t\t\t\tgroupEnd: - 1,\n\t\t\t\t\t\t\t\t\tgroupCount: - 1,\n\t\t\t\t\t\t\t\t\tinherited: false\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tcloned.clone = this.clone.bind( cloned );\n\t\t\t\t\t\t\t\treturn cloned;\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tthis.materials.push( material );\n\n\t\t\t\t\t\treturn material;\n\n\t\t\t\t\t},\n\n\t\t\t\t\tcurrentMaterial: function () {\n\n\t\t\t\t\t\tif ( this.materials.length > 0 ) {\n\n\t\t\t\t\t\t\treturn this.materials[ this.materials.length - 1 ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn undefined;\n\n\t\t\t\t\t},\n\n\t\t\t\t\t_finalize: function ( end ) {\n\n\t\t\t\t\t\tvar lastMultiMaterial = this.currentMaterial();\n\t\t\t\t\t\tif ( lastMultiMaterial && lastMultiMaterial.groupEnd === - 1 ) {\n\n\t\t\t\t\t\t\tlastMultiMaterial.groupEnd = this.geometry.vertices.length / 3;\n\t\t\t\t\t\t\tlastMultiMaterial.groupCount = lastMultiMaterial.groupEnd - lastMultiMaterial.groupStart;\n\t\t\t\t\t\t\tlastMultiMaterial.inherited = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Ignore objects tail materials if no face declarations followed them before a new o/g started.\n\t\t\t\t\t\tif ( end && this.materials.length > 1 ) {\n\n\t\t\t\t\t\t\tfor ( var mi = this.materials.length - 1; mi >= 0; mi -- ) {\n\n\t\t\t\t\t\t\t\tif ( this.materials[ mi ].groupCount <= 0 ) {\n\n\t\t\t\t\t\t\t\t\tthis.materials.splice( mi, 1 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Guarantee at least one empty material, this makes the creation later more straight forward.\n\t\t\t\t\t\tif ( end && this.materials.length === 0 ) {\n\n\t\t\t\t\t\t\tthis.materials.push( {\n\t\t\t\t\t\t\t\tname: '',\n\t\t\t\t\t\t\t\tsmooth: this.smooth\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn lastMultiMaterial;\n\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t// Inherit previous objects material.\n\t\t\t\t// Spec tells us that a declared material must be set to all objects until a new material is declared.\n\t\t\t\t// If a usemtl declaration is encountered while this new object is being parsed, it will\n\t\t\t\t// overwrite the inherited material. Exception being that there was already face declarations\n\t\t\t\t// to the inherited material, then it will be preserved for proper MultiMaterial continuation.\n\n\t\t\t\tif ( previousMaterial && previousMaterial.name && typeof previousMaterial.clone === 'function' ) {\n\n\t\t\t\t\tvar declared = previousMaterial.clone( 0 );\n\t\t\t\t\tdeclared.inherited = true;\n\t\t\t\t\tthis.object.materials.push( declared );\n\n\t\t\t\t}\n\n\t\t\t\tthis.objects.push( this.object );\n\n\t\t\t},\n\n\t\t\tfinalize: function () {\n\n\t\t\t\tif ( this.object && typeof this.object._finalize === 'function' ) {\n\n\t\t\t\t\tthis.object._finalize( true );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tparseVertexIndex: function ( value, len ) {\n\n\t\t\t\tvar index = parseInt( value, 10 );\n\t\t\t\treturn ( index >= 0 ? index - 1 : index + len / 3 ) * 3;\n\n\t\t\t},\n\n\t\t\tparseNormalIndex: function ( value, len ) {\n\n\t\t\t\tvar index = parseInt( value, 10 );\n\t\t\t\treturn ( index >= 0 ? index - 1 : index + len / 3 ) * 3;\n\n\t\t\t},\n\n\t\t\tparseUVIndex: function ( value, len ) {\n\n\t\t\t\tvar index = parseInt( value, 10 );\n\t\t\t\treturn ( index >= 0 ? index - 1 : index + len / 2 ) * 2;\n\n\t\t\t},\n\n\t\t\taddVertex: function ( a, b, c ) {\n\n\t\t\t\tvar src = this.vertices;\n\t\t\t\tvar dst = this.object.geometry.vertices;\n\n\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\t\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\n\t\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\n\n\t\t\t},\n\n\t\t\taddVertexPoint: function ( a ) {\n\n\t\t\t\tvar src = this.vertices;\n\t\t\t\tvar dst = this.object.geometry.vertices;\n\n\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\n\t\t\t},\n\n\t\t\taddVertexLine: function ( a ) {\n\n\t\t\t\tvar src = this.vertices;\n\t\t\t\tvar dst = this.object.geometry.vertices;\n\n\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\n\t\t\t},\n\n\t\t\taddNormal: function ( a, b, c ) {\n\n\t\t\t\tvar src = this.normals;\n\t\t\t\tvar dst = this.object.geometry.normals;\n\n\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\t\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\n\t\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\n\n\t\t\t},\n\n\t\t\taddColor: function ( a, b, c ) {\n\n\t\t\t\tvar src = this.colors;\n\t\t\t\tvar dst = this.object.geometry.colors;\n\n\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\t\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\n\t\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\n\n\t\t\t},\n\n\t\t\taddUV: function ( a, b, c ) {\n\n\t\t\t\tvar src = this.uvs;\n\t\t\t\tvar dst = this.object.geometry.uvs;\n\n\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ] );\n\t\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ] );\n\t\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ] );\n\n\t\t\t},\n\n\t\t\taddUVLine: function ( a ) {\n\n\t\t\t\tvar src = this.uvs;\n\t\t\t\tvar dst = this.object.geometry.uvs;\n\n\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ] );\n\n\t\t\t},\n\n\t\t\taddFace: function ( a, b, c, ua, ub, uc, na, nb, nc ) {\n\n\t\t\t\tvar vLen = this.vertices.length;\n\n\t\t\t\tvar ia = this.parseVertexIndex( a, vLen );\n\t\t\t\tvar ib = this.parseVertexIndex( b, vLen );\n\t\t\t\tvar ic = this.parseVertexIndex( c, vLen );\n\n\t\t\t\tthis.addVertex( ia, ib, ic );\n\n\t\t\t\tif ( this.colors.length > 0 ) {\n\n\t\t\t\t\tthis.addColor( ia, ib, ic );\n\n\t\t\t\t}\n\n\t\t\t\tif ( ua !== undefined && ua !== '' ) {\n\n\t\t\t\t\tvar uvLen = this.uvs.length;\n\t\t\t\t\tia = this.parseUVIndex( ua, uvLen );\n\t\t\t\t\tib = this.parseUVIndex( ub, uvLen );\n\t\t\t\t\tic = this.parseUVIndex( uc, uvLen );\n\t\t\t\t\tthis.addUV( ia, ib, ic );\n\n\t\t\t\t}\n\n\t\t\t\tif ( na !== undefined && na !== '' ) {\n\n\t\t\t\t\t// Normals are many times the same. If so, skip function call and parseInt.\n\t\t\t\t\tvar nLen = this.normals.length;\n\t\t\t\t\tia = this.parseNormalIndex( na, nLen );\n\n\t\t\t\t\tib = na === nb ? ia : this.parseNormalIndex( nb, nLen );\n\t\t\t\t\tic = na === nc ? ia : this.parseNormalIndex( nc, nLen );\n\n\t\t\t\t\tthis.addNormal( ia, ib, ic );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\taddPointGeometry: function ( vertices ) {\n\n\t\t\t\tthis.object.geometry.type = 'Points';\n\n\t\t\t\tvar vLen = this.vertices.length;\n\n\t\t\t\tfor ( var vi = 0, l = vertices.length; vi < l; vi ++ ) {\n\n\t\t\t\t\tthis.addVertexPoint( this.parseVertexIndex( vertices[ vi ], vLen ) );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\taddLineGeometry: function ( vertices, uvs ) {\n\n\t\t\t\tthis.object.geometry.type = 'Line';\n\n\t\t\t\tvar vLen = this.vertices.length;\n\t\t\t\tvar uvLen = this.uvs.length;\n\n\t\t\t\tfor ( var vi = 0, l = vertices.length; vi < l; vi ++ ) {\n\n\t\t\t\t\tthis.addVertexLine( this.parseVertexIndex( vertices[ vi ], vLen ) );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var uvi = 0, l = uvs.length; uvi < l; uvi ++ ) {\n\n\t\t\t\t\tthis.addUVLine( this.parseUVIndex( uvs[ uvi ], uvLen ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tstate.startObject( '', false );\n\n\t\treturn state;\n\n\t}\n\n\t//\n\n\tfunction OBJLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t\tthis.materials = null;\n\n\t}\n\n\tOBJLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: OBJLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar loader = new FileLoader( scope.manager );\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tonLoad( scope.parse( text ) );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tsetMaterials: function ( materials ) {\n\n\t\t\tthis.materials = materials;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tparse: function ( text ) {\n\n\t\t\tconsole.time( 'OBJLoader' );\n\n\t\t\tvar state = new ParserState();\n\n\t\t\tif ( text.indexOf( '\\r\\n' ) !== - 1 ) {\n\n\t\t\t\t// This is faster than String.split with regex that splits on both\n\t\t\t\ttext = text.replace( /\\r\\n/g, '\\n' );\n\n\t\t\t}\n\n\t\t\tif ( text.indexOf( '\\\\\\n' ) !== - 1 ) {\n\n\t\t\t\t// join lines separated by a line continuation character (\\)\n\t\t\t\ttext = text.replace( /\\\\\\n/g, '' );\n\n\t\t\t}\n\n\t\t\tvar lines = text.split( '\\n' );\n\t\t\tvar line = '', lineFirstChar = '';\n\t\t\tvar lineLength = 0;\n\t\t\tvar result = [];\n\n\t\t\t// Faster to just trim left side of the line. Use if available.\n\t\t\tvar trimLeft = ( typeof ''.trimLeft === 'function' );\n\n\t\t\tfor ( var i = 0, l = lines.length; i < l; i ++ ) {\n\n\t\t\t\tline = lines[ i ];\n\n\t\t\t\tline = trimLeft ? line.trimLeft() : line.trim();\n\n\t\t\t\tlineLength = line.length;\n\n\t\t\t\tif ( lineLength === 0 ) continue;\n\n\t\t\t\tlineFirstChar = line.charAt( 0 );\n\n\t\t\t\t// @todo invoke passed in handler if any\n\t\t\t\tif ( lineFirstChar === '#' ) continue;\n\n\t\t\t\tif ( lineFirstChar === 'v' ) {\n\n\t\t\t\t\tvar data = line.split( /\\s+/ );\n\n\t\t\t\t\tswitch ( data[ 0 ] ) {\n\n\t\t\t\t\t\tcase 'v':\n\t\t\t\t\t\t\tstate.vertices.push(\n\t\t\t\t\t\t\t\tparseFloat( data[ 1 ] ),\n\t\t\t\t\t\t\t\tparseFloat( data[ 2 ] ),\n\t\t\t\t\t\t\t\tparseFloat( data[ 3 ] )\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif ( data.length >= 7 ) {\n\n\t\t\t\t\t\t\t\tstate.colors.push(\n\t\t\t\t\t\t\t\t\tparseFloat( data[ 4 ] ),\n\t\t\t\t\t\t\t\t\tparseFloat( data[ 5 ] ),\n\t\t\t\t\t\t\t\t\tparseFloat( data[ 6 ] )\n\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'vn':\n\t\t\t\t\t\t\tstate.normals.push(\n\t\t\t\t\t\t\t\tparseFloat( data[ 1 ] ),\n\t\t\t\t\t\t\t\tparseFloat( data[ 2 ] ),\n\t\t\t\t\t\t\t\tparseFloat( data[ 3 ] )\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'vt':\n\t\t\t\t\t\t\tstate.uvs.push(\n\t\t\t\t\t\t\t\tparseFloat( data[ 1 ] ),\n\t\t\t\t\t\t\t\tparseFloat( data[ 2 ] )\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( lineFirstChar === 'f' ) {\n\n\t\t\t\t\tvar lineData = line.substr( 1 ).trim();\n\t\t\t\t\tvar vertexData = lineData.split( /\\s+/ );\n\t\t\t\t\tvar faceVertices = [];\n\n\t\t\t\t\t// Parse the face vertex data into an easy to work with format\n\n\t\t\t\t\tfor ( var j = 0, jl = vertexData.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar vertex = vertexData[ j ];\n\n\t\t\t\t\t\tif ( vertex.length > 0 ) {\n\n\t\t\t\t\t\t\tvar vertexParts = vertex.split( '/' );\n\t\t\t\t\t\t\tfaceVertices.push( vertexParts );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Draw an edge between the first vertex and all subsequent vertices to form an n-gon\n\n\t\t\t\t\tvar v1 = faceVertices[ 0 ];\n\n\t\t\t\t\tfor ( var j = 1, jl = faceVertices.length - 1; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar v2 = faceVertices[ j ];\n\t\t\t\t\t\tvar v3 = faceVertices[ j + 1 ];\n\n\t\t\t\t\t\tstate.addFace(\n\t\t\t\t\t\t\tv1[ 0 ], v2[ 0 ], v3[ 0 ],\n\t\t\t\t\t\t\tv1[ 1 ], v2[ 1 ], v3[ 1 ],\n\t\t\t\t\t\t\tv1[ 2 ], v2[ 2 ], v3[ 2 ]\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( lineFirstChar === 'l' ) {\n\n\t\t\t\t\tvar lineParts = line.substring( 1 ).trim().split( \" \" );\n\t\t\t\t\tvar lineVertices = [], lineUVs = [];\n\n\t\t\t\t\tif ( line.indexOf( \"/\" ) === - 1 ) {\n\n\t\t\t\t\t\tlineVertices = lineParts;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tfor ( var li = 0, llen = lineParts.length; li < llen; li ++ ) {\n\n\t\t\t\t\t\t\tvar parts = lineParts[ li ].split( \"/\" );\n\n\t\t\t\t\t\t\tif ( parts[ 0 ] !== \"\" ) lineVertices.push( parts[ 0 ] );\n\t\t\t\t\t\t\tif ( parts[ 1 ] !== \"\" ) lineUVs.push( parts[ 1 ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\tstate.addLineGeometry( lineVertices, lineUVs );\n\n\t\t\t\t} else if ( lineFirstChar === 'p' ) {\n\n\t\t\t\t\tvar lineData = line.substr( 1 ).trim();\n\t\t\t\t\tvar pointData = lineData.split( \" \" );\n\n\t\t\t\t\tstate.addPointGeometry( pointData );\n\n\t\t\t\t} else if ( ( result = object_pattern.exec( line ) ) !== null ) {\n\n\t\t\t\t\t// o object_name\n\t\t\t\t\t// or\n\t\t\t\t\t// g group_name\n\n\t\t\t\t\t// WORKAROUND: https://bugs.chromium.org/p/v8/issues/detail?id=2869\n\t\t\t\t\t// var name = result[ 0 ].substr( 1 ).trim();\n\t\t\t\t\tvar name = ( \" \" + result[ 0 ].substr( 1 ).trim() ).substr( 1 );\n\n\t\t\t\t\tstate.startObject( name );\n\n\t\t\t\t} else if ( material_use_pattern.test( line ) ) {\n\n\t\t\t\t\t// material\n\n\t\t\t\t\tstate.object.startMaterial( line.substring( 7 ).trim(), state.materialLibraries );\n\n\t\t\t\t} else if ( material_library_pattern.test( line ) ) {\n\n\t\t\t\t\t// mtl file\n\n\t\t\t\t\tstate.materialLibraries.push( line.substring( 7 ).trim() );\n\n\t\t\t\t} else if ( map_use_pattern.test( line ) ) {\n\n\t\t\t\t\t// the line is parsed but ignored since the loader assumes textures are defined MTL files\n\t\t\t\t\t// (according to https://www.okino.com/conv/imp_wave.htm, 'usemap' is the old-style Wavefront texture reference method)\n\n\t\t\t\t\tconsole.warn( 'THREE.OBJLoader: Rendering identifier \"usemap\" not supported. Textures must be defined in MTL files.' );\n\n\t\t\t\t} else if ( lineFirstChar === 's' ) {\n\n\t\t\t\t\tresult = line.split( ' ' );\n\n\t\t\t\t\t// smooth shading\n\n\t\t\t\t\t// @todo Handle files that have varying smooth values for a set of faces inside one geometry,\n\t\t\t\t\t// but does not define a usemtl for each face set.\n\t\t\t\t\t// This should be detected and a dummy material created (later MultiMaterial and geometry groups).\n\t\t\t\t\t// This requires some care to not create extra material on each smooth value for \"normal\" obj files.\n\t\t\t\t\t// where explicit usemtl defines geometry groups.\n\t\t\t\t\t// Example asset: examples/models/obj/cerberus/Cerberus.obj\n\n\t\t\t\t\t/*\n\t\t\t\t\t * http://paulbourke.net/dataformats/obj/\n\t\t\t\t\t * or\n\t\t\t\t\t * http://www.cs.utah.edu/~boulos/cs3505/obj_spec.pdf\n\t\t\t\t\t *\n\t\t\t\t\t * From chapter \"Grouping\" Syntax explanation \"s group_number\":\n\t\t\t\t\t * \"group_number is the smoothing group number. To turn off smoothing groups, use a value of 0 or off.\n\t\t\t\t\t * Polygonal elements use group numbers to put elements in different smoothing groups. For free-form\n\t\t\t\t\t * surfaces, smoothing groups are either turned on or off; there is no difference between values greater\n\t\t\t\t\t * than 0.\"\n\t\t\t\t\t */\n\t\t\t\t\tif ( result.length > 1 ) {\n\n\t\t\t\t\t\tvar value = result[ 1 ].trim().toLowerCase();\n\t\t\t\t\t\tstate.object.smooth = ( value !== '0' && value !== 'off' );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// ZBrush can produce \"s\" lines #11707\n\t\t\t\t\t\tstate.object.smooth = true;\n\n\t\t\t\t\t}\n\t\t\t\t\tvar material = state.object.currentMaterial();\n\t\t\t\t\tif ( material ) material.smooth = state.object.smooth;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Handle null terminated files without exception\n\t\t\t\t\tif ( line === '\\0' ) continue;\n\n\t\t\t\t\tconsole.warn( 'THREE.OBJLoader: Unexpected line: \"' + line + '\"' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.finalize();\n\n\t\t\tvar container = new Group();\n\t\t\tcontainer.materialLibraries = [].concat( state.materialLibraries );\n\n\t\t\tfor ( var i = 0, l = state.objects.length; i < l; i ++ ) {\n\n\t\t\t\tvar object = state.objects[ i ];\n\t\t\t\tvar geometry = object.geometry;\n\t\t\t\tvar materials = object.materials;\n\t\t\t\tvar isLine = ( geometry.type === 'Line' );\n\t\t\t\tvar isPoints = ( geometry.type === 'Points' );\n\t\t\t\tvar hasVertexColors = false;\n\n\t\t\t\t// Skip o/g line declarations that did not follow with any faces\n\t\t\t\tif ( geometry.vertices.length === 0 ) continue;\n\n\t\t\t\tvar buffergeometry = new BufferGeometry();\n\n\t\t\t\tbuffergeometry.setAttribute( 'position', new Float32BufferAttribute( geometry.vertices, 3 ) );\n\n\t\t\t\tif ( geometry.normals.length > 0 ) {\n\n\t\t\t\t\tbuffergeometry.setAttribute( 'normal', new Float32BufferAttribute( geometry.normals, 3 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbuffergeometry.computeVertexNormals();\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry.colors.length > 0 ) {\n\n\t\t\t\t\thasVertexColors = true;\n\t\t\t\t\tbuffergeometry.setAttribute( 'color', new Float32BufferAttribute( geometry.colors, 3 ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry.uvs.length > 0 ) {\n\n\t\t\t\t\tbuffergeometry.setAttribute( 'uv', new Float32BufferAttribute( geometry.uvs, 2 ) );\n\n\t\t\t\t}\n\n\t\t\t\t// Create materials\n\n\t\t\t\tvar createdMaterials = [];\n\n\t\t\t\tfor ( var mi = 0, miLen = materials.length; mi < miLen; mi ++ ) {\n\n\t\t\t\t\tvar sourceMaterial = materials[ mi ];\n\t\t\t\t\tvar material = undefined;\n\n\t\t\t\t\tif ( this.materials !== null ) {\n\n\t\t\t\t\t\tmaterial = this.materials.create( sourceMaterial.name );\n\n\t\t\t\t\t\t// mtl etc. loaders probably can't create line materials correctly, copy properties to a line material.\n\t\t\t\t\t\tif ( isLine && material && ! ( material instanceof LineBasicMaterial ) ) {\n\n\t\t\t\t\t\t\tvar materialLine = new LineBasicMaterial();\n\t\t\t\t\t\t\tMaterial.prototype.copy.call( materialLine, material );\n\t\t\t\t\t\t\tmaterialLine.color.copy( material.color );\n\t\t\t\t\t\t\tmaterial = materialLine;\n\n\t\t\t\t\t\t} else if ( isPoints && material && ! ( material instanceof PointsMaterial ) ) {\n\n\t\t\t\t\t\t\tvar materialPoints = new PointsMaterial( { size: 10, sizeAttenuation: false } );\n\t\t\t\t\t\t\tMaterial.prototype.copy.call( materialPoints, material );\n\t\t\t\t\t\t\tmaterialPoints.color.copy( material.color );\n\t\t\t\t\t\t\tmaterialPoints.map = material.map;\n\t\t\t\t\t\t\tmaterial = materialPoints;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! material ) {\n\n\t\t\t\t\t\tif ( isLine ) {\n\n\t\t\t\t\t\t\tmaterial = new LineBasicMaterial();\n\n\t\t\t\t\t\t} else if ( isPoints ) {\n\n\t\t\t\t\t\t\tmaterial = new PointsMaterial( { size: 1, sizeAttenuation: false } );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tmaterial = new MeshPhongMaterial();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaterial.name = sourceMaterial.name;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmaterial.flatShading = sourceMaterial.smooth ? false : true;\n\t\t\t\t\tmaterial.vertexColors = hasVertexColors ? VertexColors : NoColors;\n\n\t\t\t\t\tcreatedMaterials.push( material );\n\n\t\t\t\t}\n\n\t\t\t\t// Create mesh\n\n\t\t\t\tvar mesh;\n\n\t\t\t\tif ( createdMaterials.length > 1 ) {\n\n\t\t\t\t\tfor ( var mi = 0, miLen = materials.length; mi < miLen; mi ++ ) {\n\n\t\t\t\t\t\tvar sourceMaterial = materials[ mi ];\n\t\t\t\t\t\tbuffergeometry.addGroup( sourceMaterial.groupStart, sourceMaterial.groupCount, mi );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( isLine ) {\n\n\t\t\t\t\t\tmesh = new LineSegments( buffergeometry, createdMaterials );\n\n\t\t\t\t\t} else if ( isPoints ) {\n\n\t\t\t\t\t\tmesh = new Points( buffergeometry, createdMaterials );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tmesh = new Mesh( buffergeometry, createdMaterials );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( isLine ) {\n\n\t\t\t\t\t\tmesh = new LineSegments( buffergeometry, createdMaterials[ 0 ] );\n\n\t\t\t\t\t} else if ( isPoints ) {\n\n\t\t\t\t\t\tmesh = new Points( buffergeometry, createdMaterials[ 0 ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tmesh = new Mesh( buffergeometry, createdMaterials[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tmesh.name = object.name;\n\n\t\t\t\tcontainer.add( mesh );\n\n\t\t\t}\n\n\t\t\tconsole.timeEnd( 'OBJLoader' );\n\n\t\t\treturn container;\n\n\t\t}\n\n\t} );\n\n\treturn OBJLoader;\n\n} )();\n\nexport { OBJLoader };\n"]},"metadata":{},"sourceType":"module"}