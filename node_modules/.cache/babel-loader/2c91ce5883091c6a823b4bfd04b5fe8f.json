{"ast":null,"code":"import _slicedToArray from \"/run/media/argo/Data/_dev_from_drive_D/_scratchpad/r3f-volumetric-light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/run/media/argo/Data/_dev_from_drive_D/_scratchpad/r3f-volumetric-light/src/index.js\";\n// model by eon/sketchfab https://sketchfab.com/3d-models/elven-ranger-statue-71aec2d9f7724ae09992435ce8ff7258\nimport './fix';\nimport * as THREE from 'three';\nimport { render } from 'react-dom';\nimport React, { Suspense, useEffect, useRef, useState, useMemo } from 'react';\nimport { Canvas, useThree, useFrame, useLoader, extend } from 'react-three-fiber';\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer';\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass';\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass';\nimport { FXAAShader } from 'three/examples/jsm/shaders/FXAAShader';\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader';\nimport { AdditiveBlendingShader, VolumetricLightShader } from './shaders';\nimport './styles.css';\nextend({\n  EffectComposer,\n  RenderPass,\n  ShaderPass\n});\nvar DEFAULT_LAYER = 0;\nvar OCCLUSION_LAYER = 1; // Component auto-generated by GLTFJSX: https://github.com/react-spring/gltfjsx\n\nfunction Elf(_ref) {\n  var url = _ref.url;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      obj = _useState2[0],\n      set = _useState2[1];\n\n  useMemo(function () {\n    return new OBJLoader().load(url, set);\n  }, [url]);\n  return obj ? /*#__PURE__*/React.createElement(\"primitive\", {\n    object: obj,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 18\n    }\n  }) : null;\n}\n\nfunction Effects() {\n  var _useThree = useThree(),\n      gl = _useThree.gl,\n      scene = _useThree.scene,\n      camera = _useThree.camera,\n      size = _useThree.size;\n\n  var occlusionRenderTarget = useMemo(function () {\n    return new THREE.WebGLRenderTarget();\n  }, []);\n  var occlusionComposer = useRef();\n  var composer = useRef();\n  useEffect(function () {\n    occlusionComposer.current.setSize(size.width, size.height);\n    composer.current.setSize(size.width, size.height);\n  }, [size]);\n  useFrame(function () {\n    camera.layers.set(OCCLUSION_LAYER);\n    occlusionComposer.current.render();\n    camera.layers.set(DEFAULT_LAYER);\n    composer.current.render();\n  }, 1);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"mesh\", {\n    layers: OCCLUSION_LAYER,\n    position: [0, 4.5, -10],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"sphereBufferGeometry\", {\n    attach: \"geometry\",\n    args: [5, 32, 32],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    attach: \"material\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"effectComposer\", {\n    ref: occlusionComposer,\n    args: [gl, occlusionRenderTarget],\n    renderToScreen: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"renderPass\", {\n    attachArray: \"passes\",\n    args: [scene, camera],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"shaderPass\", {\n    attachArray: \"passes\",\n    args: [VolumetricLightShader],\n    needsSwap: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"effectComposer\", {\n    ref: composer,\n    args: [gl],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"renderPass\", {\n    attachArray: \"passes\",\n    args: [scene, camera],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"shaderPass\", {\n    attachArray: \"passes\",\n    args: [AdditiveBlendingShader],\n    \"uniforms-tAdd-value\": occlusionRenderTarget.texture,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"shaderPass\", {\n    attachArray: \"passes\",\n    args: [FXAAShader],\n    \"uniforms-resolution-value\": [1 / size.width, 1 / size.height],\n    renderToScreen: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  })));\n}\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(Canvas, {\n    shadowMap: true,\n    style: {\n      background: '#171717'\n    },\n    camera: {\n      position: [0, 2, 18],\n      fov: 50\n    },\n    gl: {\n      antialias: false\n    },\n    onCreated: function onCreated(_ref2) {\n      var gl = _ref2.gl;\n      gl.toneMapping = THREE.Uncharted2ToneMapping;\n      gl.outputEncoding = THREE.sRGBEncoding;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ambientLight\", {\n    intensity: 0.5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"pointLight\", {\n    position: [0, 60, -100],\n    intensity: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"pointLight\", {\n    position: [-50, 0, -50],\n    intensity: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"spotLight\", {\n    castShadow: true,\n    intensity: 8,\n    angle: Math.PI / 10,\n    position: [10, 10, 10],\n    \"shadow-mapSize-width\": 2048,\n    \"shadow-mapSize-height\": 2048,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"mesh\", {\n    position: [0, 4.5, -10],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"sphereBufferGeometry\", {\n    attach: \"geometry\",\n    args: [4.9, 32, 4],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    attach: \"material\",\n    transparent: true,\n    opacity: 0.5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Suspense, {\n    fallback: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Elf, {\n    url: \"/scene.obj\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    attach: \"material\",\n    transparent: true,\n    opacity: 0.5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Effects, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }));\n}\n\nrender( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 8\n  }\n}), document.querySelector('#root'));","map":{"version":3,"sources":["/run/media/argo/Data/_dev_from_drive_D/_scratchpad/r3f-volumetric-light/src/index.js"],"names":["THREE","render","React","Suspense","useEffect","useRef","useState","useMemo","Canvas","useThree","useFrame","useLoader","extend","EffectComposer","RenderPass","ShaderPass","FXAAShader","OBJLoader","AdditiveBlendingShader","VolumetricLightShader","DEFAULT_LAYER","OCCLUSION_LAYER","Elf","url","obj","set","load","Effects","gl","scene","camera","size","occlusionRenderTarget","WebGLRenderTarget","occlusionComposer","composer","current","setSize","width","height","layers","texture","App","background","position","fov","antialias","toneMapping","Uncharted2ToneMapping","outputEncoding","sRGBEncoding","Math","PI","document","querySelector"],"mappings":"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","sourcesContent":["// model by eon/sketchfab https://sketchfab.com/3d-models/elven-ranger-statue-71aec2d9f7724ae09992435ce8ff7258\n\nimport './fix'\nimport * as THREE from 'three'\nimport { render } from 'react-dom'\nimport React, { Suspense, useEffect, useRef, useState, useMemo } from 'react'\nimport { Canvas, useThree, useFrame, useLoader, extend } from 'react-three-fiber'\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer'\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass'\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass'\nimport { FXAAShader } from 'three/examples/jsm/shaders/FXAAShader'\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader'\nimport { AdditiveBlendingShader, VolumetricLightShader } from './shaders'\nimport './styles.css'\n\nextend({ EffectComposer, RenderPass, ShaderPass })\n\nconst DEFAULT_LAYER = 0\nconst OCCLUSION_LAYER = 1\n\n// Component auto-generated by GLTFJSX: https://github.com/react-spring/gltfjsx\nfunction Elf({ url }) {\n    const [obj, set] = useState()\n    useMemo(() => new OBJLoader().load(url, set), [url])\n    return obj ? <primitive object={obj} /> : null\n}\n\nfunction Effects() {\n    const { gl, scene, camera, size } = useThree()\n    const occlusionRenderTarget = useMemo(() => new THREE.WebGLRenderTarget(), [])\n    const occlusionComposer = useRef()\n    const composer = useRef()\n\n    useEffect(() => {\n        occlusionComposer.current.setSize(size.width, size.height)\n        composer.current.setSize(size.width, size.height)\n    }, [size])\n\n    useFrame(() => {\n        camera.layers.set(OCCLUSION_LAYER)\n        occlusionComposer.current.render()\n        camera.layers.set(DEFAULT_LAYER)\n        composer.current.render()\n    }, 1)\n\n    return (\n        <>\n            <mesh layers={OCCLUSION_LAYER} position={[0, 4.5, -10]}>\n                <sphereBufferGeometry attach=\"geometry\" args={[5, 32, 32]} />\n                <meshBasicMaterial attach=\"material\" />\n            </mesh>\n            <effectComposer ref={occlusionComposer} args={[gl, occlusionRenderTarget]} renderToScreen={false}>\n                <renderPass attachArray=\"passes\" args={[scene, camera]} />\n                <shaderPass attachArray=\"passes\" args={[VolumetricLightShader]} needsSwap={false} />\n            </effectComposer>\n            <effectComposer ref={composer} args={[gl]}>\n                <renderPass attachArray=\"passes\" args={[scene, camera]} />\n                <shaderPass attachArray=\"passes\" args={[AdditiveBlendingShader]} uniforms-tAdd-value={occlusionRenderTarget.texture} />\n                <shaderPass attachArray=\"passes\" args={[FXAAShader]} uniforms-resolution-value={[1 / size.width, 1 / size.height]} renderToScreen />\n            </effectComposer>\n        </>\n    )\n}\n\nfunction App() {\n    return (\n        <Canvas\n            shadowMap\n            style={{ background: '#171717' }}\n            camera={{ position: [0, 2, 18], fov: 50 }}\n            gl={{ antialias: false }}\n            onCreated={({ gl }) => {\n                gl.toneMapping = THREE.Uncharted2ToneMapping\n                gl.outputEncoding = THREE.sRGBEncoding\n            }}>\n            <ambientLight intensity={0.5} />\n            <pointLight position={[0, 60, -100]} intensity={20} />\n            <pointLight position={[-50, 0, -50]} intensity={2} />\n            <spotLight castShadow intensity={8} angle={Math.PI / 10} position={[10, 10, 10]} shadow-mapSize-width={2048} shadow-mapSize-height={2048} />\n            <mesh position={[0, 4.5, -10]}>\n                <sphereBufferGeometry attach=\"geometry\" args={[4.9, 32, 4]} />\n                <meshBasicMaterial attach=\"material\" transparent opacity={0.5} />\n            </mesh>\n            <Suspense fallback={null}>\n                <Elf url=\"/scene.obj\" />\n                <meshBasicMaterial attach=\"material\" transparent opacity={0.5} />\n            </Suspense>\n            <Effects />\n        </Canvas>\n    )\n}\n\nrender(<App />, document.querySelector('#root'))\n"]},"metadata":{},"sourceType":"module"}