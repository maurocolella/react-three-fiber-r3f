{"ast":null,"code":"export default {\n  uniforms: {\n    tDiffuse: {\n      value: null\n    },\n    tAdd: {\n      value: null\n    }\n  },\n  vertexShader: \"\\n    varying vec2 vUv;\\n    void main() {\\n    vUv = uv;\\n      gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n    }\",\n  fragmentShader: \"\\n    uniform sampler2D tDiffuse;\\n    uniform sampler2D tAdd;\\n    varying vec2 vUv;\\n    void main() {\\n      vec4 color = texture2D( tDiffuse, vUv );\\n      vec4 add = texture2D( tAdd, vUv );\\n      gl_FragColor = color + add;\\n    }\"\n};","map":{"version":3,"sources":["/run/media/argo/Data/_dev_from_drive_D/_scratchpad/r3f-volumetric-light/src/shaders/AdditiveBlendingShader.js"],"names":["uniforms","tDiffuse","value","tAdd","vertexShader","fragmentShader"],"mappings":"AAAA,eAAe;AACbA,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QAAQ,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KADF;AAERC,IAAAA,IAAI,EAAE;AAAED,MAAAA,KAAK,EAAE;AAAT;AAFE,GADG;AAMbE,EAAAA,YAAY,qJANC;AAabC,EAAAA,cAAc;AAbD,CAAf","sourcesContent":["export default {\n  uniforms: {\n    tDiffuse: { value: null },\n    tAdd: { value: null }\n  },\n\n  vertexShader: `\n    varying vec2 vUv;\n    void main() {\n    vUv = uv;\n      gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n    }`,\n\n  fragmentShader: `\n    uniform sampler2D tDiffuse;\n    uniform sampler2D tAdd;\n    varying vec2 vUv;\n    void main() {\n      vec4 color = texture2D( tDiffuse, vUv );\n      vec4 add = texture2D( tAdd, vUv );\n      gl_FragColor = color + add;\n    }`\n}\n"]},"metadata":{},"sourceType":"module"}